---
import type { PostResults } from '@/pages/blog/index.astro';
import { Dot } from 'lucide-astro';
import { tv } from 'tailwind-variants';
import Separator from './ui/separator.astro';

type Props = { results: PostResults };

const title = tv({ base: 'group-hover:text-emphasis motion-safe:transition-colors' });
const stats = tv({ base: 'flex items-center !text-xxs text-2' });
const dot = tv({ base: 'shrink-4 size-4' });
const horizontalSeparator = tv({ base: 'flex-1' });
const verticalSeparator = tv({ base: 'mt-4 sm:hidden' });
const anchor = tv({
  base: [
    'group flex flex-col rounded py-2 text-xs',
    'sm:flex-row sm:items-center sm:justify-between sm:gap-2',
    'focus-visible:outline-none focus-visible:ring-1',
  ],
});
---

<ul x-cloak class="peer [&[x-cloak]]:hidden">
  <template x-for="post in results">
    <li>
      <a :href="'/blog/' + post.slug" :aria-label="post.title" class={anchor()}>
        <span x-text="post.title" class={title()}></span>
        <Separator class={horizontalSeparator()} />
        <div class={stats()}>
          <time :datetime="post.published.iso" x-text="post.published.pretty"></time>
          <Dot class={dot()} aria-hidden />
          <span x-text="post.readingTime"></span>
        </div>
        <Separator class={verticalSeparator()} />
      </a>
    </li>
  </template>
</ul>

<!-- Fallback if JavaScript is disabled -->
<ul class="peer-[:not([x-cloak])]:hidden">
  {
    Astro.props.results.map((post) => (
      <li>
        <a href={`/blog/${post.slug}`} aria-label={post.title} class={anchor()}>
          <span class={title()}>{post.title}</span>
          <Separator class={horizontalSeparator()} />
          <div class={stats()}>
            <time datetime="post.published.iso">{post.published.pretty}</time>
            <Dot class={dot()} aria-hidden />
            <span>{post.readingTime}</span>
          </div>
          <Separator class={verticalSeparator()} />
        </a>
      </li>
    ))
  }
</ul>
