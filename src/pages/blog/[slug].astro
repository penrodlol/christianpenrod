---
import Favicon from '@/assets/favicon.webp';
import PostCard from '@/components/post-card.astro';
import PostCode from '@/components/post-code.astro';
import PostGithub from '@/components/post-github.astro';
import PostSubheader from '@/components/post-subheader.astro';
import PostViews from '@/components/post-views.astro';
import Link from '@/components/ui/link.astro';
import Moment from '@/components/ui/moment.astro';
import Separator from '@/components/ui/separator.astro';
import Layout from '@/layouts/layout.astro';
import type { GetStaticPaths } from 'astro';
import { Image } from 'astro:assets';
import { getCollection, type CollectionEntry } from 'astro:content';
import { Calendar, Clock4, Github, Linkedin, Mail, Rss, Twitter } from 'lucide-astro';

export const getStaticPaths: GetStaticPaths = async () =>
  getCollection('posts').then((posts) =>
    posts
      .sort((a, b) => b.data.published.valueOf() - a.data.published.valueOf())
      .map((post, index, _posts) => {
        const prev = _posts[index + 1] ?? _posts[0];
        const next = _posts[index - 1] ?? _posts[_posts.length - 1];
        return { params: { slug: post.slug }, props: { post, prev, next } };
      }),
  );

type Post = CollectionEntry<'posts'>;
type Props = { post: Post; prev: Post; next: Post };

const { post, prev, next } = Astro.props;
const { remarkPluginFrontmatter: extras, headings, Content } = await post.render();
---

<Layout
  title={post.data.title}
  description={post.data.description}
  og={`open-graph/src/content/posts/${post.slug}.png`}
>
  <div class="mx-auto mt-fluid-5 max-w-screen-lg xl:grid xl:grid-cols-[1fr,17rem] xl:gap-16">
    <article data-pagefind-body class="mx-auto max-w-prose">
      <div class="flex flex-col gap-3" data-pagefind-meta={`description:${post.data.description}`}>
        <h1 class="text-lg font-bold uppercase tracking-widest">{post.data.title}</h1>
        <div class="flex flex-wrap items-center gap-4 text-xxs text-2">
          <div class="flex items-center gap-2 rounded border bg-2 px-2">
            <Calendar class="shrink-0" size={14} aria-hidden />
            <Moment data-pagefind-meta="published">{post.data.published}</Moment>
          </div>
          <div class="flex items-center gap-2 rounded border bg-2 px-2">
            <Clock4 class="shrink-0" size={14} aria-hidden />
            <span data-pagefind-meta="readingTime">{extras.readingTime} Min Read</span>
          </div>
          <PostViews slug={post.slug} />
        </div>
      </div>
      <Separator class="mb-4 mt-6 xl:mb-10" />
      <div data-pagefind-ignore class="block xl:hidden">
        <details>
          <summary class="text-xs tracking-wider">TABLE OF CONTENTS</summary>
          <!-- prettier-ignore -->
          <ol class="flex pt-2 flex-col gap-1 text-xs text-2">
            <li><Link href="#introduction">Introduction</Link></li>
            {headings.map((heading) => (<li><Link href={`#${heading.slug}`}>{heading.text}</Link></li>))}
          </ol>
        </details>
        <Separator class="mb-10 mt-4" />
      </div>
      <div data-content class="flex flex-col gap-8 text-xs !leading-relaxed">
        <Content components={{ a: Link, h2: PostSubheader, figure: PostCode }} />
        {post.data.repo && <PostGithub repo={post.data.repo} />}
      </div>
      <Separator class="mb-16 mt-10" />
      <div data-pagefind-ignore class="flex flex-col gap-4">
        <h3 class="font-bold tracking-widest">MORE POSTS</h3>
        <div class="grid gap-x-10 gap-y-6 md:grid-cols-2">
          <PostCard post={prev} />
          <PostCard post={next} />
        </div>
      </div>
    </article>
    <h2 id="introduction" class="sr-only"></h2>
    <ul class="hidden">
      {post.data.topics.map((topic) => <ul data-pagefind-filter="topics">{topic}</ul>)}
    </ul>
    <aside class="sticky top-10 hidden h-max rounded border xl:block">
      <div class="flex flex-col gap-4 border-b p-4">
        <h2 class="text-xs tracking-wider">TABLE OF CONTENTS</h2>
        <!-- prettier-ignore -->
        <ol class="flex flex-col gap-1 text-xxs text-2">
          <li><Link href="#introduction">Introduction</Link></li>
          {headings.map((heading) => (<li><Link href={`#${heading.slug}`}>{heading.text}</Link></li>))}
        </ol>
      </div>
      <div class="flex gap-4 p-4">
        <div class="h-[70px] w-[70px]">
          <Image class="shrink-0" src={Favicon} alt="Me" width={2048} height={2048} />
        </div>
        <div class="text-xxs">
          <p class="font-bold tracking-wider">CHRISTIAN PENROD</p>
          <p class="mb-2 text-2">Front-End Web Developer</p>
          <!-- prettier-ignore -->
          <ul class="flex text-2 [&_[data-external-icon]]:hidden [&_a]:!pr-2 [&_svg]:!w-3">
            <li><Link href={import.meta.env.GITHUB}><Github size={12} aria-label="Github" /></Link></li>
            <li><Link href={import.meta.env.TWITTER}><Twitter size={12} aria-label="Twitter/X" /></Link></li>
            <li><Link href={import.meta.env.LINKEDIN}><Linkedin size={12} aria-label="LinkedIn" /></Link></li>
            <li><Link href={`mailto:${import.meta.env.EMAIL}`}><Mail size={12} aria-label="Email" /></Link></li>
            <li><Link href={new URL('rss.xml', import.meta.env.SITE)}><Rss size={12} aria-label="RSS" /></Link></li>
          </ul>
        </div>
      </div>
    </aside>
  </div>
</Layout>

<style is:global lang="sass">
  [data-content] a
    @apply text-1

  [data-content] p
    @apply text-2

  [data-content] blockquote
    @apply rounded border bg-2 italic pr-4 pl-6 py-2 relative
  [data-content] blockquote::before
    @apply bg-3 content-[""] rounded-l absolute w-3 border-r inset-y-0 left-0

  [data-content] ol
    @apply list-decimal list-inside

  [data-content] code:not([data-language])
    @apply text-1 font-sans text-xxs border rounded px-1.5 py-0.5

  [data-content] details
    @apply bg-2 rounded border [&:not(:last-of-type)]:mb-3 px-4 py-1 text-xs
  [data-content] details[open]
    @apply [&_summary]:mb-4 pb-4
  [data-content] summary
    @apply cursor-pointer select-none hover:text-emphasis motion-safe:transition-colors
</style>
