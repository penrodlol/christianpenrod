---
import PostBlockquote from '@/components/post-blockquote.astro';
import PostCard from '@/components/post-card.astro';
import PostCode from '@/components/post-code.astro';
import PostSubheader from '@/components/post-subheader.astro';
import PostViews from '@/components/post-views.astro';
import GithubCard from '@/components/ui/github-card.astro';
import Link from '@/components/ui/link.astro';
import Separator from '@/components/ui/separator.astro';
import Time from '@/components/ui/time.astro';
import Layout from '@/layouts/layout.astro';
import type { GetStaticPaths } from 'astro';
import { getCollection, type CollectionEntry } from 'astro:content';
import { CalendarIcon, Clock4Icon } from 'lucide-preact';

export const getStaticPaths: GetStaticPaths = async () =>
  getCollection('posts').then((posts) =>
    posts
      .sort((a, b) => b.data.published.valueOf() - a.data.published.valueOf())
      .map((post, index, _posts) => {
        const prev = _posts[index + 1] ?? _posts[0];
        const next = _posts[index - 1] ?? _posts[_posts.length - 1];
        return { params: { slug: post.slug }, props: { post, prev, next } };
      }),
  );

type Post = CollectionEntry<'posts'>;
type Props = { post: Post; prev: Post; next: Post };

const { post, prev, next } = Astro.props;
const { remarkPluginFrontmatter, headings, Content } = await post.render();
---

<Layout title={post.data.title} description={post.data.description}>
  <div class="mx-auto mt-fluid-4 max-w-screen-lg lg:grid lg:grid-cols-[1fr,16rem] lg:gap-10">
    <article class="mx-auto max-w-prose">
      <div class="flex flex-col gap-2">
        <h1 class="text-lg font-bold uppercase tracking-widest">{post.data.title}</h1>
        <div class="flex gap-8 text-xs text-2">
          <div class="flex items-center gap-2">
            <CalendarIcon size={14} />
            <Time>{post.data.published}</Time>
          </div>
          <div class="flex items-center gap-2">
            <Clock4Icon size={14} />
            <span>{remarkPluginFrontmatter.readingTime} min read</span>
          </div>
        </div>
      </div>
      <Separator class="mb-10 mt-4" />
      <div class="flex flex-col gap-8 text-xs !leading-relaxed [&_a]:text-1 [&_p]:text-2">
        <Content
          components={{ a: Link, h2: PostSubheader, blockquote: PostBlockquote, figure: PostCode }}
        />
        {post.data.repo && <GithubCard repo={post.data.repo} />}
      </div>
      <Separator class="mb-16 mt-10" />
      <div class="flex flex-col gap-4">
        <h3 class="font-bold tracking-widest">MORE POSTS</h3>
        <div class="grid gap-x-10 gap-y-6 md:grid-cols-2">
          <PostCard post={prev} />
          <PostCard post={next} />
        </div>
      </div>
    </article>
    <aside class="sticky top-10 hidden h-max flex-col gap-4 rounded border lg:flex">
      <div class="flex flex-col gap-3 px-4 pt-4">
        <h2 class="text-xs tracking-wider">TABLE OF CONTENTS</h2>
        <!-- prettier-ignore -->
        <ol class="flex flex-col gap-1 text-xxs text-2">
          <li><Link href="#introduction">Introduction</Link></li>
          {headings.map((heading) => (<li><Link href={`#${heading.slug}`}>{heading.text}</Link></li>))}
        </ol>
      </div>
      <div class="flex justify-center border-t bg-2 px-3 py-1.5 text-xxs">
        <PostViews slug={post.slug} />
      </div>
    </aside>
  </div>
</Layout>
