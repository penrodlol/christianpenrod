---
import PostCard from '@/components/post-card.astro';
import PostResults from '@/components/post-results.astro';
import Chip from '@/components/ui/chip.astro';
import Command from '@/components/ui/command.astro';
import Separator from '@/components/ui/separator.astro';
import Textfield from '@/components/ui/textfield.astro';
import Layout from '@/layouts/layout.astro';
import { getCollection } from 'astro:content';
import { PostView, db, sum } from 'astro:db';
import { Dot, Search } from 'lucide-astro';

export type PostResults = typeof postResults;

const [rs] = await db.select({ views: sum(PostView.views) }).from(PostView);
const views = Intl.NumberFormat('en', { notation: 'compact', maximumFractionDigits: 1 }).format(Number(rs?.views ?? 0));

const _posts = await getCollection('posts');
const posts = _posts.sort((a, b) => b.data.published.date.valueOf() - a.data.published.date.valueOf());
const topics = [...new Set(posts.flatMap((post) => post.data.topics))].sort();
const postResults = await Promise.all(
  posts.map(async (post) => {
    const { readingTime } = (await post.render()).remarkPluginFrontmatter;
    return { title: post.data.title, published: post.data.published, slug: post.slug, readingTime };
  }),
);
---

<Layout title="Blog | Christian Penrod">
  <div class="mx-auto mt-fluid-5 max-w-xl lg:max-w-screen-lg">
    <section>
      <h1 class="text-3xl font-bold tracking-widest">BLOG POSTS</h1>
      <p class="max-w-prose text-xs text-2">Explore various sofware-related posts.</p>
    </section>
    <Separator class="mb-8 mt-4 lg:mb-12" />
    <div class="grid gap-20 lg:grid-cols-[1fr_30%]">
      <section x-data={`pagefind(${JSON.stringify(postResults)}, "slug")`} class="flex flex-col gap-6">
        <div class="flex items-center gap-4">
          <h2 class="font-bold leading-none tracking-wider text-2">ALL POSTS</h2>
          <Separator class="flex-1" />
          <div class="flex items-center text-xxs text-2">
            <span>{views} Views</span>
            <Dot class="shrink-0" size={14} aria-hidden />
            <span>{posts.length} Posts</span>
          </div>
        </div>
        <div class="flex flex-col gap-4 rounded border bg-2/30 p-4 text-xs">
          <Textfield placeholder="Search Posts" aria-label="Search Posts" x-model.debounce.200ms="query">
            <Search slot="prefix" size={12} aria-hidden />
            <Command slot="suffix" key="/" @keyup.window.slash="$el.parentElement.previousElementSibling.focus()" />
          </Textfield>
          <!-- prettier-ignore -->
          <ul class="flex flex-wrap gap-2">{topics.map((value) => (<li><Chip {value} x-model="tags" /></li>))}</ul>
        </div>
        <div>
          <PostResults results={postResults} />
          <div x-show="!results?.length" x-cloak class="mt-6 text-center [&[x-cloak]]:hidden">
            <h2 class="text-base font-bold tracking-wider">No Posts Found</h2>
            <p class="text-xs text-2">No posts matched the search criteria.</p>
          </div>
        </div>
      </section>
      <section class="hidden flex-col gap-6 lg:flex">
        <h2 class="font-bold leading-none tracking-wider text-2">RECENT POSTS</h2>
        <!-- prettier-ignore -->
        <ul class="flex flex-col gap-6">
          {posts.slice(0, 3).map((post) => <li><PostCard {post} /></li>)}
        </ul>
      </section>
    </div>
  </div>
</Layout>
