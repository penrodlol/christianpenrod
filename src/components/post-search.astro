---
import { Search } from 'lucide-astro';
import Dialog from './ui/dialog.astro';
import Textfield from './ui/textfield.astro';
import Button from './ui/button.astro';
---

<Dialog class="flex h-[30rem] flex-col gap-6 text-xs">
  <Button slot="trigger" class="w-full text-2">
    <Search size={12} aria-hidden />
    <span class="mr-auto text-xs">Search Posts</span>
    <kbd class="rounded border bg-2 p-0.5 font-sans text-xxs !leading-none">âŒ˜K</kbd>
  </Button>
  <Textfield as="input" data-post-search-input placeholder="Search Posts">
    <Search slot="icon" size={12} aria-hidden />
  </Textfield>
  <ul data-post-search-results class="flex flex-col gap-4"></ul>
</Dialog>

<script>
  import type { CollectionEntry } from 'astro:content';

  type Meta = Pick<CollectionEntry<'posts'>['data'], 'title' | 'description'>;
  type Search = { results: Array<{ data: () => Promise<{ meta: Meta }> }> };

  document.addEventListener('astro:page-load', async () => {
    const pagefind = await import('.vercel/output/static/blog/pagefind/pagefind');
    pagefind.init();

    const results = document.querySelector('[data-post-search-results]') as HTMLUListElement;
    const result = (meta: Meta) => `
      <li>
        <span class="text-xs">${meta.title}</span>
        <p class="text-xxs text-2">${meta.description}</p>
      </li>
    `;

    document.querySelector('[data-post-search-input]')?.addEventListener('input', async (e) => {
      const search: Search = await pagefind.search((e.target as HTMLInputElement).value.trim());
      const payload = await Promise.all(search.results.map(async (r) => (await r.data()).meta));
      results.innerHTML = '';
      payload.forEach((meta) => (results.innerHTML += result(meta)));
    });
  });
</script>
