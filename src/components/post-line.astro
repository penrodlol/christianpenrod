---
import type { CollectionEntry } from 'astro:content';
import { Dot } from 'lucide-astro';
import Moment from './ui/moment.astro';
import Separator from './ui/separator.astro';
import { twJoin } from 'tailwind-merge';

type Props = { post: CollectionEntry<'posts'> };

const { post } = Astro.props;
const { remarkPluginFrontmatter } = await post.render();
---

<a
  href={`/blog/${post.slug}`}
  aria-label={`${post.data.title}. ${post.data.description}`}
  class={twJoin(
    'group flex flex-col rounded py-2 text-xs',
    'sm:flex-row sm:items-center sm:justify-between sm:gap-2',
    'focus-visible:outline-none focus-visible:ring-1',
  )}
>
  <span class="group-hover:text-emphasis motion-safe:transition-colors">{post.data.title}</span>
  <Separator class="flex-1" />
  <div class="flex items-center text-xxs text-2">
    <Moment>{post.data.published}</Moment>
    <Dot class="shrink-0" size={14} aria-hidden />
    <span>{remarkPluginFrontmatter.readingTime} Min Read</span>
  </div>
  <Separator class="mt-4 sm:hidden" />
</a>

<script>
  document.addEventListener('astro:page-load', () => {
    if (customElements.get('post-line')) return;
    class PostLine extends HTMLElement {
      constructor() {
        super();
        const post = JSON.parse(decodeURIComponent(this.dataset.post ?? '{}'));
        this.innerHTML = `
        <a
          href="${post.url.replace(/\/$/, '')}"
          aria-label="${`${post.title}. ${post.description}`}"
          class="group flex flex-col rounded py-2 text-xs sm:flex-row sm:items-center sm:justify-between sm:gap-2 focus-visible:outline-none focus-visible:ring-1"
        >
          <span class="group-hover:text-emphasis motion-safe:transition-colors">${post.title}</span>
          <div role="none" class="flex-1 h-px bg-3 rounded"></div>
          <div class="flex items-center text-xxs text-2">
            <time datetime="${new Date(post.published).toISOString()}">${post.published}</time>
            <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12.1" cy="12.1" r="1"/></svg>
            <span>${post.readingTime}</span>
          </div>
          <div role="none" class="mt-4 h-px bg-3 rounded sm:hidden"></div>
        </a>
      `;
      }
    }
    customElements.define('post-line', PostLine);
  });
</script>
