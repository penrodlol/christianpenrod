---
export const prerender = false;
export const partial = true;

import Button from '@/components/ui/button.astro';
import Date from '@/components/ui/date.astro';
import If from '@/components/ui/if.astro';
import Separator from '@/components/ui/separator.astro';
import Skeleton from '@/components/ui/skeleton.astro';
import Text from '@/components/ui/text.astro';
import { z } from 'astro/zod';
import { getCollection } from 'astro:content';
import { db, sql } from 'astro:db';
import { Dot, RefreshCw } from 'lucide-astro';
import { twJoin } from 'tailwind-merge';

import.meta.glob('/src/content/posts/**/*.mdx', { eager: true });

let posts = (await getCollection('posts')).sort((a, b) => b.data.published.valueOf() - a.data.published.valueOf());

if (Astro.request.method === 'POST') {
  const formData = await Astro.request.formData();
  // prettier-ignore
  const query = z.string().trim().min(1).transform(v => `"${v.replaceAll('"', '""')}"*`).safeParse(formData.get('query'));
  const topics = z.array(z.string().trim().min(1)).min(1).safeParse(formData.getAll('topics'));

  if (topics.success) posts = posts.filter((post) => post.data.topics.some((topic) => topics.data.includes(topic)));

  if (query.success) {
    const payload = await db.run(sql`select slug from PostSearch where body match ${query.data}`);
    posts = posts.filter((post) => payload.rows.some((row) => row.slug === post.slug));
  }
}
---

<div data-partial-results>
  <ul x-show="!loading">
    {
      posts.map((post) => (
        <li>
          <a
            href={`/blog/${post.slug}`}
            aria-label={post.data.title}
            class={twJoin([
              'group flex flex-col rounded py-2 text-xs',
              'sm:flex-row sm:items-center sm:justify-between sm:gap-2',
              'focus-visible:outline-none focus-visible:ring-1',
            ])}
          >
            <Text class="group-hover:text-brand motion-safe:transition-colors">{post.data.title}</Text>
            <Separator class="flex-1" />
            <div class="flex items-center text-2">
              <Date value={post.data.published} />
              <Dot aria-hidden class="shrink-4 size-4" />
              <Text>{post.render().then((data) => data.remarkPluginFrontmatter.readingTime)}</Text>
            </div>
          </a>
          <Separator class="my-2 sm:hidden" />
        </li>
      ))
    }
  </ul>

  <div x-show="loading" x-cloak x-transition:enter.delay.100ms class="mt-1 flex flex-col gap-4">
    <template x-for="_ in 6"><Skeleton class="h-8 w-full" /></template>
  </div>

  <If condition={!posts.length}>
    <div x-show="!loading" x-cloak class="mx-auto mt-6 max-w-max text-center text-xs">
      <div x-show="failed">
        <Text as="h3">Failed to Load Posts</Text>
        <Text as="p">An error occurred while fetching posts.</Text>
      </div>
      <div x-show="!failed">
        <Text as="h3">No Posts Found</Text>
        <Text as="p">No posts matched the search criteria.</Text>
      </div>
      <Button class="group mt-6" @click="$root.querySelector('form')?.reset(); submit()">
        <RefreshCw aria-hidden class="size-3 group-hover:rotate-180 motion-safe:transition-transform" /> Reset Filters
      </Button>
    </div>
  </If>
</div>
