---
import { Search } from 'lucide-astro';
import Command from './ui/command.astro';
import Textfield from './ui/textfield.astro';
import Chip from './ui/chip.astro';

type Props = { topics: Array<string> };

const { topics } = Astro.props;
---

<div data-post-filter class="flex flex-col gap-4 rounded border bg-2/30 p-4">
  <Textfield data-post-filter-search placeholder="Search Posts" class="text-xs">
    <Search slot="prefix" size={12} aria-hidden />
    <Command slot="suffix" key="/" selector="[data-post-filter-search]" />
  </Textfield>
  <!-- prettier-ignore -->
  <ul data-post-filter-topic class="flex flex-wrap gap-2">
    {topics.map((value) => (<Chip aria-label={`${value} Filter`} {value}>{value}</Chip>))}
  </ul>
</div>

<script>
  type State = { search: string | null; topics: Set<string> };

  document.addEventListener('astro:page-load', async () => {
    const state: State = { search: null, topics: new Set<string>() };

    const dispatch = () => {
      const detail = { search: state.search, topics: Array.from(state.topics) };
      document.dispatchEvent(new CustomEvent('post-filter', { detail }));
    };

    document.querySelector('[data-post-filter-search]')?.addEventListener('input', (e) => {
      const { value } = e.target as HTMLInputElement;
      state.search = value.trim().length ? value.trim() : null;
      dispatch();
    });

    document.querySelectorAll('[data-post-filter-topic] input').forEach((checkbox) => {
      checkbox.addEventListener('change', (e) => {
        const { value, checked } = e.target as HTMLInputElement;
        if (checked) state.topics.add(value);
        else state.topics.delete(value);
        dispatch();
      });
    });
  });
</script>
