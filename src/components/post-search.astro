---
import { Search } from 'lucide-astro';
import Textfield from './ui/textfield.astro';
---

<Textfield data-post-search-input placeholder="Search Posts" class="text-xs">
  <Search slot="icon" size={12} aria-hidden />
</Textfield>

<script>
  import type { CollectionEntry } from 'astro:content';

  type Meta = CollectionEntry<'posts'>['data'] & { readingTime: string };
  type Data = { raw_url: string; meta: Meta; excerpt: string };
  type Search = { results: Array<{ data: () => Promise<Data> }> };

  document.addEventListener('astro:page-load', async () => {
    const pagefind = await import('.vercel/output/static/pagefind/pagefind');
    const searchedPosts = document.querySelector('[data-searched-posts]') as HTMLUListElement;
    const staticPosts = searchedPosts.nextElementSibling as HTMLUListElement;

    pagefind.init();

    document.querySelector('[data-post-search-input]')?.addEventListener('input', async (e) => {
      const query = (e.target as HTMLInputElement).value.trim();
      const search: Search = await pagefind.search(query);
      const payload = await Promise.all(search.results.map(async (r) => r.data()));

      staticPosts.classList.toggle('hidden', query.length > 0);
      searchedPosts.classList.toggle('hidden', query.length === 0);

      searchedPosts.innerHTML = '';
      payload.forEach(({ raw_url, meta }) => {
        const post = encodeURIComponent(JSON.stringify({ ...meta, url: raw_url }));
        searchedPosts.innerHTML += `<post-card data-post="${post}" />`;
      });
    });
  });
</script>
