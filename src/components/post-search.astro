---
import { Command, Search } from 'lucide-astro';
import Dialog from './ui/dialog.astro';
import Textfield from './ui/textfield.astro';
import Button from './ui/button.astro';
---

<Dialog data-post-search class="flex h-[30rem] max-h-[90vh] flex-col text-xs">
  <Button slot="trigger" class="w-full text-2">
    <Search size={12} aria-hidden />
    <span class="mr-auto text-xs">Search Posts</span>
    <kbd class="flex items-center rounded border bg-2 p-0.5 font-sans text-xxs !leading-none">
      <Command size={10} aria-hidden />K
    </kbd>
  </Button>
  <div class="bg-inherit p-6">
    <Textfield as="input" data-post-search-input placeholder="Search Posts">
      <Search slot="icon" size={12} aria-hidden />
    </Textfield>
  </div>
  <div class="flex flex-1 flex-col gap-2 overflow-auto px-8">
    <p data-post-search-results-msg class="break-all text-xxs text-2"></p>
    <ul data-post-search-results></ul>
  </div>
</Dialog>

<script>
  type Data = { raw_url: string; meta: Record<string, string>; excerpt: string };
  type Search = { results: Array<{ data: () => Promise<Data> }> };

  document.addEventListener('astro:page-load', async () => {
    const pagefind = await import('.vercel/output/static/pagefind/pagefind');
    const results = document.querySelector('[data-post-search-results]') as HTMLElement;
    const resultsMsg = document.querySelector('[data-post-search-results-msg]') as HTMLElement;

    pagefind.init();

    document.querySelector('[data-post-search-input]')?.addEventListener('input', async (e) => {
      const query = (e.target as HTMLInputElement).value.trim();
      const search: Search = await pagefind.search(query);
      const payload = await Promise.all(search.results.map(async (r) => r.data()));

      results.innerHTML = '';
      resultsMsg.innerHTML = query.length
        ? `Found ${payload.length} results(s) for <strong>${query}</strong>`
        : '';
      payload.forEach(({ raw_url, meta, excerpt }) => {
        results.innerHTML += `
          <li class="border-b py-4 first:pt-0 last:border-b-0">
            <a
              href=${raw_url}
              aria-label="${meta.title}. ${meta.description}"
              class="${
                'flex flex-col select-none rounded p-2 ' +
                'hover:text-emphasis motion-safe:transition-colors ' +
                'focus-visible:outline-none focus-visible:ring-2 ' +
                '[&_mark]:text-1 [&_mark]:bg-transparent [&_mark]:border ' +
                '[&_mark]:rounded [&_mark]:px-1.5 [&_mark]:py-px'
              }"
            >
              <span class="text-xs">${meta.title}</span>
              <p class="mt-3 text-xxs text-2">${excerpt}...</p>
            </a>
          </li>
        `;
      });
    });
  });
</script>
